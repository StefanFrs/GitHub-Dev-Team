@model IEnumerable<Microsoft.AspNetCore.Identity.IdentityUser>
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div>
    <h3>Users are:</h3>
    @foreach (var user in UserManager.GetUsersInRoleAsync("User").Result)
    {
        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="" id="@user.Id" onclick="@UserManager.RemoveFromRoleAsync(user, "User")">
            <label class="form-check-label" for="@user.Id">
                @user.UserName
            </label>
        </div>
    }
</div>
<div>
    <h3>Team Leaders are:</h3>
    @foreach (var user in UserManager.GetUsersInRoleAsync("TeamLead").Result)
    {
    <div class="form-check">
        <input class="form-check-input" type="checkbox" value="" id="@user.Id" onclick="@UserManager.RemoveFromRoleAsync(user, "TeamLead")">
        <label class="form-check-label" for="@user.Id">
            @user.UserName
        </label>
    </div>
    }
</div>
<div>
    <h3>Administrators are:</h3>
    @foreach (var user in UserManager.GetUsersInRoleAsync("Administrator").Result)
    {
        <div class="form-check">
            <input class="input" type="checkbox" value="" id="@user.Id" onclick="@UserManager.RemoveFromRoleAsync(user, "Administrator")">
            <label class="form-check-label" for="@user.Id">
                @user.UserName
            </label>
        </div>
    }
</div>
<style>
    p, h3, label, td, th {
        color: white !important;
    }
</style>
